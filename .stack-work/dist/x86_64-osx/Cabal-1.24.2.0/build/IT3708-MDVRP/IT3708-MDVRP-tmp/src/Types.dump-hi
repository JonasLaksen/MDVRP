
==================== FINAL INTERFACE ====================
2017-02-24 12:30:41.295465 UTC

interface main@main:Types 8002
  interface hash: dce35adefae428d4f8f5507ed0ebe9ae
  ABI hash: 84d440671d91bc7127fd44e7871db9b3
  export-list hash: 031c722d2eaf5c00cf8059beff2d5b0e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1d2122a9eeb2223310b2d1f91e6dd3a2
  sig of: Nothing
  used TH splices: False
  where
exports:
  Types.Customer
  Types.Depot
  Types.Entity
  Types.Point
  Types.RandomInt
  Types.Route
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
1a5292c41cfb76ffc12733c6e453f427
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Types.$trModule2 Types.$trModule1) -}
ba03922dd37c9f7d4792154d65ea10bd
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Types"#) -}
353d80ee02cc3bb30df29a319dceae2a
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
f75d8487e3b128e128ef94d19db2ae50
  type Customer = Types.Entity
2dba77e5376bdc0022480a68274372fe
  type Depot = ((GHC.Types.Int, GHC.Types.Int), Types.Entity)
ff31e4bda671bf82b6a5ed878955602f
  type Entity = [GHC.Types.Int]
4566a5dabcd3c5255e6731e0b7be94ba
  type Point = (GHC.Types.Int, GHC.Types.Int)
04853cb8dd0d543dc5630a522ecfb0e2
  type RandomInt = GHC.Types.Int
1575af41b020866d7a49276c2048a2ed
  type Route = [Types.Customer]
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

