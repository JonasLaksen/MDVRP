
==================== FINAL INTERFACE ====================
2017-02-28 12:23:30.034288 UTC

interface main@main:Routing 8002
  interface hash: 76d1cb4bf900f30fe2ecab2325ee0462
  ABI hash: ef38d2023695924e8988b5b9c606e405
  export-list hash: 5fc9b13a4bbfdd992e135cf154eefe88
  orphan hash: 47ae25d08d48a880b3b8ad93bc190632
  flag hash: 1d2122a9eeb2223310b2d1f91e6dd3a2
  sig of: Nothing
  used TH splices: False
  where
exports:
  Routing.coverDemands
  Routing.crossover
  Routing.delete
  Routing.delete'
  Routing.fitness
  Routing.initPopulation
  Routing.mostSimilar
  Routing.mostSimilar'
  Routing.mutate
module dependencies: Evolution Scheduling Types Utils
package dependencies: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      random-shuffle-0.0.4@random-shuffle-0.0.4-97h14tPp7Ru21125sv6IMi
                      split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH:Control.Monad.Trans.Random.Lazy
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity base-4.9.1.0:Data.List.NonEmpty
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Semigroup
                         base-4.9.1.0:Data.Type.Equality base-4.9.1.0:Data.Version
                         base-4.9.1.0:Data.Void base-4.9.1.0:GHC.Exts
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
import  -/  MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH:Control.Monad.Random 1ac23f2f24d80161face0842d1be3259
import  -/  MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH:Control.Monad.Random.Class 3fe5f573e27153f81a1671dc89c2a803
import  -/  MonadRandom-0.5.1@MonadRandom-0.5.1-IY6HiWu00vQLARukQW3KMH:Control.Monad.Trans.Random.Lazy 326e5785e79a3ee38a8ed524d38bf2ea
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:Data.Ord 7fde5c9d64d4c27431689be19182758a
import  -/  base-4.9.1.0:Data.Traversable 556020d7cf3c4a34a774600512918a37
import  -/  base-4.9.1.0:Debug.Trace a9edf3aec504f4423d8ba829ab373a25
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  Evolution 0ee1623eb55630f5b9659d325c207326
  exports: 10dba61f2a15540df6659415010d3f19
  apply 7649695f42bb39de4c6bcc4979f1b9e6
import  -/  Scheduling 7af8ec8dbb0bd381b6ad413b6f98217f
  exports: c63b7f7791b0048c3b8a0007ef79609d
  crossover 4ee75b14e35359d22e20556a755cd8fe
  fitness 266f8707351473290aadbeb844df7451
  fitness' 6f965f9d04a6e97940328e9903914648
  mutate f5d9eb7ba5bc484aa3b9aae7b52d4146
import  -/  Types 84d440671d91bc7127fd44e7871db9b3
  exports: 031c722d2eaf5c00cf8059beff2d5b0e
  Customer f75d8487e3b128e128ef94d19db2ae50
  Depot 2dba77e5376bdc0022480a68274372fe
  Route 1575af41b020866d7a49276c2048a2ed
import  -/  Utils 217a5add3868c286a5e6b41d101f8178
  exports: 9ee9c5ee12a628beb47394d23bfdd83e
  boolToInt 793226d97cf29f69389d11ee4aa47ca8
  insertInto 250eaf25fa608c91c6f982518c65dfc6
  nestedSwap 94bed73ffe11e104153b0e75a8284be6
  routeDistance dcd70eb0656824b9d0965208d2cf332c
  shrink 3c0a77c22b1e38e853f646c700901a6c
import  -/  random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog:System.Random cc3ef358c669b194cf9fe94db6f2430f
import  -/  random-shuffle-0.0.4@random-shuffle-0.0.4-97h14tPp7Ru21125sv6IMi:System.Random.Shuffle f4987cf345fa95642672b4cbf037c4b8
import  -/  split-0.2.3.1@split-0.2.3.1-FWyXC6nhV0H3AfM8IzrEFk:Data.List.Split c60198a427bfd51d9fb4562c059ec1d2
190a7d5b24974ebead8b265fa3812fd2
  $s$fEq[] :: GHC.Classes.Eq [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [[GHC.Types.Int]]
                  (GHC.Classes.$fEq[]_$c==
                     @ [GHC.Types.Int]
                     GHC.Classes.$fEq[]_$s$fEq[])
                  Routing.$s$fEq[]_$s$fEq[]_$c/= -}
1a72802c70870b6b5eb36989a6423b63
  $s$fEq[]_$s$fEq[]_$c/= ::
    [[GHC.Types.Int]] -> [[GHC.Types.Int]] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [[GHC.Types.Int]]) (y :: [[GHC.Types.Int]]) ->
                 GHC.Classes.not
                   (GHC.Classes.$fEq[]_$c==
                      @ [GHC.Types.Int]
                      GHC.Classes.$fEq[]_$s$fEq[]
                      x
                      y)) -}
c6f5107896040507e39d502e536e7bc4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Routing.$trModule2
                   Routing.$trModule1) -}
76f592a3b80ba3556bcfbaca3152ba19
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Routing"#) -}
bc8a03344b47a824f7b0badc28842a61
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
f007a4198937d633cd2ca3a9b76b821a
  $wcoverDemands ::
    GHC.Prim.Int# -> [Types.Customer] -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: [Types.Customer]) ->
                 case Routing.$wgo w 0# of ww1 { DEFAULT ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.>=# ww ww1) }) -}
33b1eadb809add1467f84e26df9cb990
  $wgo :: [[GHC.Types.Int]] -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
9ad0885c547896b6a954520296bb941f
  $winitPopulation ::
    Types.Depot -> [Types.Customer] -> [Types.Route]
  {- Arity: 2, Strictness: <L,1*U(U(A,U),A)><S,1*U>, Inline: [0] -}
b498bab459b2d3cfcb1d2418ede01549
  $wmostSimilar' :: Types.Route -> [Types.Route] -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <S,U><L,1*U>, Inline: [0] -}
ca73e281a8b382047a7197d84fd7eb3c
  coverDemands :: Types.Depot -> [Types.Customer] -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(S(LS(S))L),1*U(1*U(A,1*U(U)),A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Depot) (w1 :: [Types.Customer]) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { (,) ww4 ww5 ->
                 case ww5 of ww6 { GHC.Types.I# ww7 ->
                 Routing.$wcoverDemands ww7 w1 } } }) -}
b7efc306cc14f7b05cffb7147559c226
  crossover ::
    System.Random.RandomGen g =>
    [Types.Route]
    -> [Types.Route]
    -> Control.Monad.Trans.Random.Lazy.Rand g [[Types.Route]]
  {- Arity: 3,
     Strictness: <L,U(C(U(1*U(U),U)),C(U(U,U)),U)><L,U><L,U> -}
765f3b9f41906eb117827bbe1d1c746f
  delete :: GHC.Classes.Eq a => a -> [[a]] -> [[a]]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)))><L,U><S,1*U>,
     Unfolding: (\ @ a
                   ($dEq :: GHC.Classes.Eq a)
                   (x :: a)
                   (xxs :: [[a]]) ->
                 GHC.Base.map
                   @ [a]
                   @ [a]
                   (\ (xs :: [a]) ->
                    GHC.List.filter
                      @ a
                      (\ (ds :: a) -> GHC.Classes./= @ a $dEq ds x)
                      xs)
                   xxs) -}
75500d6beb522581c039ef38a0fa0e94
  delete' :: GHC.Classes.Eq a => [a] -> [[a]] -> [[a]]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,C(C1(U)))><S,1*U><S,1*U> -}
3b63791c88fff2d0025cd451e8844a93
  delete'_$sdelete' ::
    [Types.Customer] -> [[Types.Customer]] -> [[Types.Customer]]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
9061db8210438acf39e0a13768e17d73
  delete_$sdelete ::
    Types.Customer -> [[Types.Customer]] -> [[Types.Customer]]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: (\ (x :: Types.Customer) (xxs :: [[Types.Customer]]) ->
                 GHC.Base.map
                   @ [Types.Customer]
                   @ [Types.Customer]
                   (\ (xs :: [Types.Customer]) ->
                    GHC.List.filter
                      @ [GHC.Types.Int]
                      (\ (ds :: Types.Customer) -> GHC.Classes.$fEq[]_$s$c/= ds x)
                      xs)
                   xxs) -}
32f6dcf85d9a6a7693e97fb516a9baf7
  fitness ::
    System.Random.RandomGen g =>
    GHC.Types.Int
    -> Types.Depot
    -> [Types.Route]
    -> Control.Monad.Trans.Random.Lazy.Rand g GHC.Types.Float
  {- Arity: 4,
     Strictness: <L,U(U,U,U)><L,1*U(U)><L,U(U(A,U(U)),U)><L,U> -}
c2258f89e8efaba06b8e169a8105b46c
  initPopulation ::
    GHC.Types.Int -> Types.Depot -> [Types.Customer] -> [Types.Route]
  {- Arity: 3, Strictness: <L,A><L,1*U(U(A,U),A)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Types.Depot)
                   (w2 :: [Types.Customer]) ->
                 Routing.$winitPopulation w1 w2) -}
f33e5cdb38ddd0e04e836e01d02adf51
  mostSimilar :: [Types.Route] -> [Types.Route] -> Types.Route
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (r1s :: [Types.Route]) (r2s :: [Types.Route]) ->
                 letrec {
                   go :: [Types.Route] -> Types.Route
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [Types.Route]) ->
                     case ds of wild {
                       [] -> Routing.mostSimilar1
                       : x ds1
                       -> case ds1 of wild1 {
                            [] -> x
                            : ipv ipv1
                            -> case Routing.$wmostSimilar' x r2s of ww { DEFAULT ->
                               let {
                                 y :: Types.Route = go wild1
                               } in
                               case Routing.$wmostSimilar' y r2s of ww1 { DEFAULT ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# ww ww1) of wild2 {
                                 GHC.Types.False
                                 -> case GHC.Prim.tagToEnum#
                                           @ GHC.Types.Bool
                                           (GHC.Prim.==# ww ww1) of wild3 {
                                      GHC.Types.False -> x GHC.Types.True -> y }
                                 GHC.Types.True -> y } } } } }
                 } in
                 go r1s) -}
a9a9c355dc96f20e108cea7a516fc1eb
  mostSimilar' :: Types.Route -> [Types.Route] -> GHC.Types.Int
  {- Arity: 2, Strictness: <S,U><L,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Types.Route) (w1 :: [Types.Route]) ->
                 case Routing.$wmostSimilar' w w1 of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
2ef02896843a0114c0eaae3f7599ff60
  mostSimilar1 :: [Types.Customer]
  {- Strictness: x -}
a4453e4deaa4a166ef1e6fff65eee901
  mutate ::
    System.Random.RandomGen g =>
    [Types.Route]
    -> Control.Monad.Trans.Random.Lazy.Rand g [Types.Route]
  {- Arity: 2, Strictness: <L,U(C(U(1*U(U),U)),C(U(U,U)),U)><L,U> -}
"SPEC delete @ Customer" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                    Types.Customer)
  Routing.delete @ [GHC.Types.Int] $dEq = Routing.delete_$sdelete
"SPEC delete' @ Customer" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                     Types.Customer)
  Routing.delete' @ [GHC.Types.Int] $dEq = Routing.delete'_$sdelete'
"SPEC/Routing $fEq[] @ [Int]" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                         [GHC.Types.Int])
  GHC.Classes.$fEq[] @ [GHC.Types.Int] $dEq = Routing.$s$fEq[]
"SPEC/Routing $fEq[]_$c/= @ [Int]" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                              [GHC.Types.Int])
  GHC.Classes.$fEq[]_$c/= @ [GHC.Types.Int] $dEq
  = Routing.$s$fEq[]_$s$fEq[]_$c/=
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

